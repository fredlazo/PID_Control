{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww19480\viewh9720\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs36 \cf0 \

\b Proportional Component
\b0 :\
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Changes in steering are proportional to the error value.  When the steering angle and error are large, the car repeatedly overshoots the center and oscillates.\
\

\b Integral Component
\b0 :\
Mitigates systemic bias which prevents the car from reaching the center line.\
\

\b Derivative Component:
\b0 \
Dampens oscillation by weighting the rate of change of the error.\
\

\b Hyperparameters:
\b0 \
\pard\pardeftab720\sl280\sa240\partightenfactor0
\cf2 Parameters were manually tuned, starting with a workable P value and modifying D until I successfully completed a lap of the track. In this example, I did not require a non-zero value for I.\
	pid.Init(-0.25, 0, -0.75);\
I used a gradient descent/Twiddle algorithm to tune the parameters further and introduce a separate variable controller for throttle values based on turn, error and steering. This resulted in faster lap times.\
}